name: test
on: [pull_request]

env:
  TF_LOG: WARN
  GOOGLE_APPLICATION_CREDENTIALS: terraform-sa.json

jobs:
  test:
    name: terraform
    runs-on: ubuntu-latest
    steps: 
    -
      uses: actions/checkout@v2
    -
      uses: hashicorp/setup-terraform@v1
    -
      name: Terraform fmt
      run: terraform fmt -check
    -
      run: 'echo "${TERRAFORM_SA}" > terraform-sa.json'
      env:
        TERRAFORM_SA: ${{ secrets.TERRAFORM_SA }}
    -
      name: Terraform Init
      run: terraform init
    -
      name: Terraform Validate
      run: terraform validate -no-color
    -
      name: Terraform Plan
      run: terraform plan -no-color -lock=false -input=false
    -
      name: Terraform feedback
      uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ\`${{ steps.validate.outputs.stdout }}\`
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`\n
          ${process.env.PLAN}
          \`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })
    -
      name: Cleanup
      if: always()
      run: rm "${GOOGLE_APPLICATION_CREDENTIALS}" || true
