name: release

on:
  push:
    branches: [main,master]

env:
  TF_LOG: INFO
  GOOGLE_APPLICATION_CREDENTIALS: terraform-sa.json
  TF_VAR_cf_email: ${{ secrets.TF_VAR_CF_EMAIL }}
  TF_VAR_cf_api_key: ${{ secrets.TF_VAR_CF_API_KEY }}
  TF_VAR_github_token: ${{ secrets.TF_VAR_GITHUB_TOKEN }}

jobs:
  deploy:
    name: terraform
    runs-on: ubuntu-latest
    steps: 
    -
      uses: actions/checkout@v2
    -
      uses: go-semantic-release/action@v1
      with:
        github-token: ${{ secrets.github_token }}
    -
      name: create deployment
      uses: niklasmerz/github-deployment-action@master
      env:
        github_token: ${{ secrets.github_token }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -c main -e production
    -
      uses: hashicorp/setup-terraform@v1
    -
      run: 'echo "${TERRAFORM_SA}" > terraform-sa.json'
      env:
        TERRAFORM_SA: ${{ secrets.TERRAFORM_SA }}
    -
      name: Terraform Init
      run: terraform init
    -
      name: Terraform Validate
      run: terraform validate -no-color
    -
      name: Terraform Apply
      run: terraform apply -no-color -input=false -lock=true -auto-approve -input=false
    -
      name: set deployment status
      uses: niklasmerz/github-deployment-action@master
      env:
        github_token: ${{ secrets.github_token }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -s success -u https://iron.security/ -f
    -
      name: set failed deployment
      uses: niklasmerz/github-deployment-action@master
      if: ${{ failure() }}
      env:
        github_token: ${{ secrets.github_token }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -s failed -u https://iron.security/ -f
    -
      name: Cleanup
      if: always()
      run: rm "${GOOGLE_APPLICATION_CREDENTIALS}" || true