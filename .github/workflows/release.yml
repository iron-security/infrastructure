name: release

on:
  push:
    branches: [main,master]

env:
  TF_LOG: INFO
  TF_VAR_cf_email: ${{ secrets.TF_VAR_CF_EMAIL }}
  TF_VAR_cf_api_key: ${{ secrets.TF_VAR_CF_API_KEY }}
  TF_VAR_github_token: ${{ secrets.TF_VAR_GITHUB_TOKEN }}
  GCLOUD_PROJECT: ironsecurity

jobs:
  deploy:
    permissions:
      contents: write
      id-token: 'write'
    name: terraform
    runs-on: ubuntu-latest
    steps: 
    -
      uses: actions/checkout@v2
    -
      uses: go-semantic-release/action@v1
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
    -
      name: create deployment
      uses: niklasmerz/github-deployment-action@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -c main -e production
    -
      uses: hashicorp/setup-terraform@v1
    -
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v0.3.0
      id: gcloud_auth
      with:
        token_format: access_token
        access_token_lifetime: 900s
        workload_identity_provider: projects/1049058775616/locations/global/workloadIdentityPools/main-pool/providers/github
        service_account: terraform-ci-cd@ironsecurity.iam.gserviceaccount.com
        create_credentials_file: true
        activate_credentials_file: true
    -
      name: Terraform Init
      run: terraform init
    -
      name: Terraform Validate
      run: terraform validate -no-color
    -
      name: Terraform Apply
      run: terraform apply -no-color -input=false -lock=true -auto-approve -input=false
    -
      name: set deployment status
      uses: niklasmerz/github-deployment-action@v1.1.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -s success -u https://iron.security/ -f
    -
      name: set failed deployment
      uses: niklasmerz/github-deployment-action@v1.1.0
      if: ${{ failure() }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        args: -o ${{ github.repository_owner }} -r ${{ github.event.repository.name }} -s failed -u https://iron.security/ -f
    -
      name: Cleanup
      if: always()
      run: rm "${GOOGLE_APPLICATION_CREDENTIALS}" || true